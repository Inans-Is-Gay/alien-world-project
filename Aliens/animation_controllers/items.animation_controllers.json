{
  "format_version": "1.10.0",
  "animation_controllers": {
    "controller.animation.item.handheld": {
      "states": {
        "default": {
          "transitions": [
            {
              "kinetic_axe": "query.is_item_name_any(0) == 'kinetic_axe'"
            },
            {
              "concussion_hammer": "query.is_item_name_any(0) == 'concussion_hammer'"
            },
            {
              "fire_saw": "query.is_item_name_any(0) == 'fire_saw'"
            },
            {
              "rocket_axe": "query.is_item_name_any(0) == 'rocket_axe'"
            },
            {
              "laser_sword": "query.is_item_name_any(0) == 'laser_sword'"
            },
            {
              "long_sword": "query.is_item_name_any(0) == 'longsword'"
            },
            {
              "creeper_canon": "query.is_item_name_any(0) == 'creeper_canon'"
            }
          ]
        },
        "kinetic_axe": {
          "on_entry": ["/event entity @s evt:to_kinetic_axe"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'kinetic_axe'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld"]
        },
        "concussion_hammer": {
          "on_entry": [
						"/event entity @s[scores={CHCharge=0}] evt:concussion_hammer_lc_0",
						"/event entity @s[scores={CHCharge=1}] evt:concussion_hammer_lc_1",
						"/event entity @s[scores={CHCharge=2}] evt:concussion_hammer_lc_2",
						"/event entity @s[scores={CHCharge=3}] evt:concussion_hammer_lc_3",
						"/event entity @s[scores={CHCharge=4}] evt:concussion_hammer_lc_4",
						"/event entity @s[scores={CHCharge=5}] evt:concussion_hammer_lc_5"
					],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'concussion_hammer'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld"]
        },
        "fire_saw": {
          "on_entry": ["/event entity @s evt:to_fire_saw"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'fire_saw'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld"]
        },
        "rocket_axe": {
          "on_entry": ["/event entity @s evt:to_rocket_axe"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'rocket_axe'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld", "@s evt:normal_damage"]
        },
        "laser_sword": {
          "on_entry": ["/event entity @s evt:to_laser_sword"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'laser_sword'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld"]
        },
        "long_sword": {
          "on_entry": ["/event entity @s evt:to_long_sword"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'longsword'"
            }
          ],
          "on_exit": ["@s evt:reset_handheld", "@s evt:reset_mark_var"]
        },
        "creeper_canon": {
          "on_entry": ["/tag @s add creeper_canon"],
          "transitions": [
            {
              "default": "query.is_item_name_any(0) != 'creeper_canon'"
            }
          ],
          "on_exit": ["/tag @s remove creeper_canon"]
        }
      }
    },
    "controller.animation.item.animations": {
      "states": {
        "default": {
          "on_entry": ["@s evt:reset_mark_var"],
          "transitions": [
            {
              "longsword_rc": "query.mark_variant == 1"
            },
            {
              "fire_saw_active": "query.mark_variant == 2"
            }
          ]
        },
        "longsword_rc": {
          "animations": ["longsword_rc"],
          "transitions": [
            {
              "default": "query.mark_variant != 1 && q.any_animation_finished"
            }
          ]
        },
        "fire_saw_active": {
          "animations": ["fire_saw_active"],
          "transitions": [
            {
              "default": "query.mark_variant != 2"
            }
          ]
        }
      }
    },
    "controller.animation.item.longsword": {
      "states": {
        "default": {
          "on_entry": ["/tag @s remove longsword_lc"],
          "transitions": [
            {
              "l_click": "query.is_item_name_any == 'longsword' && variable.attack_time >= 0.01 && variable.attack_time <= 0.2"
            },
            {
              "r_click": "query.is_item_name_any == 'longsword' && query.is_using_item"
            }
          ]
        },
        "l_click": {
          "on_entry": [
            "/tag @s add longsword_lc",
            "/function weapons/melee/longsword_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'longsword' && !variable.attack_time >= 0.01"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        },
        "r_click": {
          "on_entry": [
            "/tag @s[scores={cdLNSr=0}] add longsword_rc",
            "/execute @s[scores={cdLNSr=0}] ~ ~ ~ function weapons/melee/longsword_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:longsword"
          ]
        }
      }
    },
    "controller.animation.item.kinetic_axe": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove kinetic_axe_lc",
            "/tag @s remove kinetic_axe_lcs",
            "/tag @s remove kinetic_axe_rc"
          ],
          "transitions": [
            {
              "l_click": "query.is_item_name_any == 'kinetic_axe' && variable.attack_time >= 0.01 && variable.attack_time <= 0.2 && !query.is_sneaking"
            },
            {
              "r_click": "query.is_item_name_any == 'kinetic_axe' && query.is_using_item"
            },
            {
              "l_click_sneak": "query.is_item_name_any == 'kinetic_axe' && variable.attack_time > 0.0 && variable.attack_time <= 0.2 && query.is_sneaking"
            }
          ]
        },
        "l_click": {
          "on_entry": [
            "/tag @s add kinetic_axe_lc",
            "/function weapons/melee/kinetic_axe_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'kinetic_axe' && !variable.attack_time >= 0.01"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        },
        "r_click": {
          "on_entry": [
            "/tag @s[scores={cdKAr=0}] add kinetic_axe_rc",
            "/function weapons/melee/kinetic_axe_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:kinetic_axe"
          ]
        },
        "l_click_sneak": {
          "on_entry": [
            "/tag @s add kinetic_axe_lcs",
            "/execute @s[scores={cdKAl=0}] ~ ~ ~ function weapons/melee/kinetic_axe_lcs"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'kinetic_axe' && !variable.attack_time > 0.0"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    },
    "controller.animation.item.fire_saw": {
      "states": {
				"default": {
          "on_entry": [
						"/event entity @s evt:to_fire_saw_active",
            "/tag @s remove fire_saw_lc",
            "/tag @s remove fire_saw_rc"
          ],
          "transitions": [
            {
              "l_click": "query.is_item_name_any == 'fire_saw' && variable.attack_time > 0.0 && variable.attack_time <= 0.2"
            },
            {
              "r_click": "query.is_item_name_any == 'fire_saw' && query.is_using_item"
            }
          ]
        },
        "l_click": {
          "on_entry": [
            "/tag @s add fire_saw_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'fire_saw' && !variable.attack_time > 0.0"
            },
            {
              "r_click": "query.is_item_name_any == 'fire_saw' && query.is_using_item"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        },
        "r_click": {
          "on_entry": [
            "/tag @s add fire_saw_rc",
            "/function weapons/melee/fire_saw_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
						"/replaceitem entity @s slot.weapon.mainhand 0 tsu:fire_saw",
						"@s evt:reset_click"
					]
        }
      }
    },
    "controller.animation.item.concussion_hammer": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove concussion_hammer_lc",
            "/tag @s remove concussion_hammer_rc"
          ],
          "transitions": [
            {
              "l_click": "query.is_item_name_any == 'concussion_hammer' && variable.attack_time > 0.0 && variable.attack_time <= 0.2"
            },
            {
              "r_click": "query.is_item_name_any == 'concussion_hammer' && query.is_using_item"
            }
          ]
        },
        "l_click": {
          "on_entry": [
            "/tag @s add concussion_hammer_lc",
            "/function weapons/melee/concussion_hammer_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'concussion_hammer' && !variable.attack_time > 0.0"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        },
        "r_click": {
          "on_entry": [
            "/tag @s[scores={cdCHr=0}] add concussion_hammer_rc",
            "/function weapons/melee/concussion_hammer_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:concussion_hammer"
          ]
        }
      }
    },
    "controller.animation.item.laser_sword": {
      "states": {
        "default": {
					"animations": [
						"laser_sword_remove_tag"
					],
          "transitions": [
						{
              "l_click": "query.is_item_name_any == 'laser_sword' && variable.attack_time > 0.0 && variable.attack_time <= 0.2"
            },
            {
              "r_click": "query.is_item_name_any == 'laser_sword' && query.is_using_item"
            }
          ]
        },
				"l_click": {
          "on_entry": [
						"/function weapons/melee/laser_sword_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'laser_sword' && !variable.attack_time > 0.0"
            }
          ]
        },
        "r_click": {
          "on_entry": [
            "/tag @s[scores={cdLSr=0}] add laser_sword_rc",
            "/function weapons/melee/laser_sword_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:laser_sword"
          ]
        }
      }
    },
    "controller.animation.item.rocket_axe": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove rocket_axe_lc",
            "/tag @s remove rocket_axe_rc"
          ],
          "transitions": [
            {
              "l_click": "query.is_item_name_any == 'rocket_axe' && variable.attack_time > 0.0 && variable.attack_time <= 0.2"
            },
            {
              "r_click": "query.is_item_name_any == 'rocket_axe' && query.is_using_item"
            }
          ]
        },
        "l_click": {
          "on_entry": [
            "/tag @s add rocket_axe_lc",
            "/function weapons/melee/rocket_axe_lc"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'rocket_axe' && !variable.attack_time > 0.0"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        },
        "r_click": {
          "on_entry": [
            "/tag @s[scores={cdRAr=0}] add rocket_axe_rc",
            "/function weapons/melee/rocket_axe_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
						"@s evt:reset_click",
						"/replaceitem entity @s slot.weapon.mainhand 0 tsu:rocket_axe"
					]
        }
      }
    },
    "controller.animation.item.laser_blaster": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove laser_blaster_lc_burst",
            "/tag @s remove laser_blaster_lc_auto",
            "/tag @s remove laser_blaster_rc"
          ],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'laser_blaster' && query.is_using_item"
            },
            {
              "sneaking": "query.is_item_name_any == 'laser_blaster' && query.is_sneaking"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s[scores={ARMode=0}] add laser_blaster_lc_burst",
            "/tag @s[scores={ARMode=1,ARMode1CD=0}] add laser_blaster_lc_auto",
            "/function weapons/ranged/laser_blaster_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:laser_blaster"
          ]
        },
        "sneaking": {
          "on_entry": [
            "/tag @s add laser_blaster_rc",
            "/function weapons/ranged/laser_blaster_sneaking"
          ],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'laser_blaster' && !query.is_sneaking"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    },
    "controller.animation.item.scatter_blaster": {
      "states": {
        "default": {
          "on_entry": ["/tag @s remove scatter_blaster_lc"],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'scatter_blaster' && query.is_using_item"
            }
          ]
        },
        "using_item": {
          "on_entry": ["/function weapons/ranged/scatter_blaster_using_item"],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:scatter_blaster"
          ]
        }
      }
    },
    "controller.animation.item.blaster_glove": {
      "states": {
        "default": {
          "on_entry": ["/tag @s remove blaster_glove_lc"],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'blaster_glove' && query.is_using_item"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s add blaster_glove_lc",
            "/function weapons/ranged/blaster_glove_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:blaster_glove"
          ]
        }
      }
    },
    "controller.animation.item.laser_bow": {
      "states": {
        "default": {
          "on_entry": ["/tag @s remove laser_bow_standard"],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'laser_bow' && query.is_using_item"
            }
          ]
        },
        "using_item": {
          "on_entry": ["/function weapons/ranged/laser_bow_using_item"],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:laser_bow"
          ]
        }
      }
    },
    "controller.animation.item.pulse_gun": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove pulse_gun_standard",
            "/tag @s remove pulse_gun_heavy",
            "/tag @s remove pulse_gun_rc"
          ],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'pulse_gun' && query.is_using_item"
            },
            {
              "sneaking": "query.is_item_name_any == 'pulse_gun' && query.is_sneaking"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s[scores={PGMode=0}] add pulse_gun_standard",
            "/tag @s[scores={PGMode=1,PGMode1CD=0}] add pulse_gun_heavy",
            "/function weapons/ranged/pulse_gun_using_item",
            "/tag @s add pulse_gun_rc"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:pulse_gun"
          ]
        },
        "sneaking": {
          "on_entry": ["/function weapons/ranged/pulse_gun_sneaking"],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'pulse_gun' && !query.is_sneaking"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    },
    "controller.animation.item.ion_gun": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove ion_gun_standard",
            "/tag @s remove ion_gun_heavy"
          ],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'ion_gun' && query.is_using_item"
            },
            {
              "sneaking": "query.is_item_name_any == 'ion_gun' && query.is_sneaking"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s[scores={IGMode=0}] add ion_gun_standard",
            "/tag @s[scores={IGMode=1,IGMode1CD=0}] add ion_gun_heavy",
            "/function weapons/ranged/ion_gun_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:ion_gun"
          ]
        },
        "sneaking": {
          "on_entry": ["/function weapons/ranged/ion_gun_sneaking"],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'ion_gun' && !query.is_sneaking"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    },
    "controller.animation.item.creeper_canon": {
      "states": {
        "default": {
          "on_entry": ["/tag @s remove creeper_canon_rc"],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'creeper_canon' && query.is_using_item"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s add creeper_canon_rc",
            "/function weapons/ranged/creeper_canon_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
						"@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:creeper_canon"
					]
        }
      }
    },
    "controller.animation.item.omni_gun": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove omni_gun_gravity",
            "/tag @s remove omni_gun_fire",
            "/tag @s remove omni_gun_freeze"
          ],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'omni_gun' && query.is_using_item"
            },
            {
              "sneaking": "query.is_item_name_any == 'omni_gun' && query.is_sneaking"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/tag @s[scores={OGMode=0}] add omni_gun_gravity",
            "/tag @s[scores={OGMode=1}] add omni_gun_fire",
            "/function weapons/ranged/omni_gun_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:omni_gun"
          ]
        },
        "sneaking": {
          "on_entry": ["/function weapons/ranged/omni_gun_sneaking"],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'omni_gun' && !query.is_sneaking"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    },
    "controller.animation.item.lightning_gun": {
      "states": {
        "default": {
          "on_entry": [
            "/tag @s remove lightning_gun_single",
            "/tag @s remove lightning_gun_multi"
          ],
          "transitions": [
            {
              "using_item": "query.is_item_name_any == 'lightning_gun' && query.is_using_item"
            },
            {
              "sneaking": "query.is_item_name_any == 'lightning_gun' && query.is_sneaking"
            }
          ]
        },
        "using_item": {
          "on_entry": [
            "/execute @s[scores={LGMode=0}] ~ ~ ~ function weapons/ranged/lightning_gun/standard/ray_init",
            "/execute @s[scores={LGMode=1,LGMode1CD=0}] ~ ~ ~ function weapons/ranged/lightning_gun/multi/ray_init",
            "/function weapons/ranged/lightning_gun_using_item"
          ],
          "transitions": [
            {
              "default": "!query.is_using_item"
            }
          ],
          "on_exit": [
            "@s evt:reset_click",
            "/replaceitem entity @s slot.weapon.mainhand 0 tsu:lightning_gun"
          ]
        },
        "sneaking": {
          "on_entry": ["/function weapons/ranged/lightning_gun_sneaking"],
          "transitions": [
            {
              "default": "query.is_item_name_any == 'lightning_gun' && !query.is_sneaking"
            }
          ],
          "on_exit": ["@s evt:reset_click"]
        }
      }
    }
  }
}
